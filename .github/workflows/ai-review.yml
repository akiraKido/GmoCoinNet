name: AI Review Check

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
      - develop

jobs:
  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          echo "files=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Get PR description
        id: pr-info
        run: |
          echo "description<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.pull_request.body }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Read CONTRIBUTING.md
        id: rules
        run: |
          echo "rules<<EOF" >> $GITHUB_OUTPUT
          cat CONTRIBUTING.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: AI Review
        id: ai-review
        run: |
          RESPONSE=$(curl -X POST https://api.anthropic.com/v1/messages \
            -H "x-api-key: ${{ secrets.CLAUDE_API_KEY }}" \
            -H "anthropic-version: 2023-06-01" \
            -H "content-type: application/json" \
            -d '{
              "model": "claude-3.5-sonnet-latest",
              "messages": [{
                "role": "user",
                "content": "You are a code reviewer checking if a PR follows the project guidelines.\n\nContributing Rules:\n${{ steps.rules.outputs.rules }}\n\nPR Description:\n${{ steps.pr-info.outputs.description }}\nChanged Files: ${{ steps.changed-files.outputs.files }}\n\nPlease review and check:\n1. Does the PR description include all required elements?\n2. For code changes, do they follow our code style rules?\n3. Has the version been updated in GmoCoinNet.csproj?\n\nProvide your review with clear pass/fail indicators for each requirement."
              }]
            }')
          
          # Extract the review content from the response and escape it for GitHub Actions
          REVIEW=$(echo "$RESPONSE" | jq -r '.messages[0].content' | sed 's/"/\\"/g')
          echo "review<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const review = `
            ## AI Review Results
            
            ${process.env.AI_REVIEW_RESULT}
            
            Note: This is an automated review. Please address any issues found.
            `;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: review
            });
        env:
          AI_REVIEW_RESULT: ${{ steps.ai-review.outputs.review }} 